/* ==========================================================================
   Shapes
   http://www.w3.org/TR/css-shapes-1/
   ========================================================================== */

/**
 * Square
 *
 * @example
 * .square(100px, tomato);
 */
.square(@size, @color: black) {
    .rectangle(@size, @size, @color);
}

/**
 * Rectangle
 *
 * @example
 * .rectangle(150px, 100px, lightblue);
 */
.rectangle(@width, @height, @color: black) {
    display: block;
    width: @width;
    height: @height;
    background-color: @color;
}

/**
 * Circle
 *
 * @example
 * .circle(50px, lightgreen);
 */
.circle(@radius, @color: black) {
    .square(@radius * 2, @color);
    .border-radius(@radius);
}

/**
 * Oval
 *
 * @example
 * .oval(150px, 100px, gold);
 */
.oval(@width, @height, @color: black) {
    .rectangle(@width, @height, @color);
    .border-radius(@width / 2 ~"/" @height / 2);
}

/**
 * Ring
 *
 * @example
 * .ring(50px, 30px, chocolate);
 */
.ring(@radius-large, @radius-small, @color: black) {
    display: block;
    width: @radius-small * 2;
    height: @radius-small * 2;
    border: @radius-large - @radius-small solid @color;
    .border-radius(@radius-large);
}

/**
 * Triangle
 * https://css-tricks.com/snippets/css/css-triangle/
 *
 * @example
 * .triangle(@color: #db5252; @direction: bottom; @base: 12px; @height: 6px;);
 */
.triangle(@color: black; @direction: top; @base: @height / sin(60deg); @height: @base * sin(60deg);) {
    display: inline-block;
    border-style: solid;
    border-color: @color;

    .triangle-direction() when (@direction = top), (@direction = bottom) {
        border-width: round(@height) round(@base / 2);
        border-left-color: transparent;
        border-right-color: transparent;
    }
    .triangle-direction() when (@direction = left), (@direction = right) {
        border-width: round(@base / 2) round(@height);
        border-top-color: transparent;
        border-bottom-color: transparent;
    }

    .triangle-direction();
    border-@{direction}: none;
}

/**
 * Triangle with Border
 */
.triangle-with-border() {

}

/**
 * Triangle with Shadow
 */
.triangle-with-shadow() {

}

/**
 * Diamond
 */
.diamond(@width, @height, @color: black) {
    @side: sqrt(@width * @width / 4 + @height * @height / 4);

    .diamond-transform() when (@width = @height) {
        @delta: @side;
        .transform(rotate(45deg));
    }

    .diamond-transform() when (default()) {
        @angle: asin(@height / @side / 2);
        @skew: @angle - convert(45deg, rad);
        @delta: @side * cos(@skew);
        .transform(rotate(45deg) skew(@skew, @skew));
    }

    display: block;
    width: @width;
    height: @height;
    position: relative;

    &:before {
        .diamond-transform();

        content: "";
        position: absolute;
        left: (@width - @delta) / 2;
        top: (@height - @delta) / 2;
        width: @delta;
        height: @delta;
        background-color: @color;
    }
}

/**
 * Cross
 */
.cross() {}

/**
 * Heart
 */
.heart() {}

/**
 * Star
 */
.star() {}